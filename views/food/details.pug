extends ../layout.pug

mixin comment(comment)
  p #{ comment.display_name || comment.username } - ##{ comment.id } - #{ comment.edited_at || comment.created_at }
  p.con #{ comment.content }
  if user
    a= __('comment.reply')
  if comment.children && comment.children.length
    .replies
      each reply in comment.children
        +comment(reply)

block head
  title= __('title.food.details', food.translation.title)
  style.
    h3 {
      display: flex;
      gap: 1rem;
    }

    .replies {
      margin-left: 1.5rem;
    }

block content
  h1 #{ food.translation.title }
  a(href=`/users/${food.author.id}`) by #{ food.author.display_name || food.author.username }
  if food.author.id !== food.translationAuthor.id
    a(href=`/users/${food.translationAuthor.id}`) translated by #{ food.translationAuthor.display_name || food.translationAuthor.username }

  h3
    span #{ __('food.prep_time') }: #{ food.prep_time }
    span #{ __('food.cook_time') }: #{ food.cook_time }
    span #{ __('food.calories') }: #{ food.calories.toFixed(0) }

  h3
    span= __('food.yields', food.translation.yields)

  p #{ food.translation.description }

  h4= __('food.ingredients')
  ul
    each ingredient in food.translation.ingredients
      li= ingredient

  h4= __('food.instructions')
  ul
    each instruction in food.translation.instructions_list
      li= instruction

  h4= __('comment.title')
  if food.comments.length
    each comment in food.comments
      .com
        +comment(comment)

    pre= JSON.stringify(food.comments, null, 2)
  else
    p= __('comment.none')
